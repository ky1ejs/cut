
fragment ProfileInterfaceFragment on ProfileInterface {
  id
  name
  username
  bio_url
  share_url
  bio
  imageUrl
  followerCount
  followingCount
  isCurrentUser
}

fragment ProfileFragment on Profile {
  ...ProfileInterfaceFragment
  isFollowing
}

fragment FullProfileFragment on Profile {
  ...ProfileFragment
  favoriteContent {
    ...ContentFragment
  }
  watchList {
    ...ContentFragment
  }
  ratings {
    ...ContentFragment
  }
}


fragment CompleteAccountFragment on CompleteAccount {
  ...ProfileInterfaceFragment
  phoneNumber
  favoriteContent {
    ...ContentFragment
  }
  watchList {
    ...ContentFragment
  }
  ratings {
    ...ContentFragment
  }
}

fragment CompleteAccountResultFragment on CompleteAccountResult {
  completeAccount {
    ...CompleteAccountFragment
  }
  updatedDevice {
    session_id
  }
}

mutation CompleteAccount($params: CompleteAccountInput!) {
  completeAccount(params: $params) {
    ...CompleteAccountResultFragment
  }
}

mutation InitiateAuthentication($email: String!) {
  initiateAuthentication(email: $email)
}

mutation ValidateAuthentication($id: String!, $deviceName: String!, $code: String!) {
  validateAuthentication(id: $id, deviceName: $deviceName, code: $code) {
    ...CompleteAccountResultFragment
  }
}

query CheckUsernameAvailability($username: String!) {
  isUsernameAvailable(username: $username)
}

query GetAccount {
  account {
    ... on IncompleteAccount {
      id
    }
    ... on CompleteAccount {
      ...CompleteAccountFragment
    }
  }
}

query GetAccountMutation @apollo_client_ios_localCacheMutation {
  account {
    ... on IncompleteAccount {
      id
    }
    ... on CompleteAccount {
      ...CompleteAccountFragment
    }
  }
}

mutation UpdateAccount($params: UpdateAccountInput!) {
  updateAccount(params: $params) {
    ...CompleteAccountFragment
  }
}

mutation UploadContactNumbers($contacts: [ContactInput!]!) {
  uploadContactNumbers(contacts: $contacts)
}

mutation UploadContactEmails($contacts: [ContactInput!]!) {
  uploadContactEmails(contacts: $contacts)
}

query GetContactMatches {
  contactMatches {
    ...ProfileFragment
  }
}

query GetFollowers($profileId: String!, $followDirection: FollowDirection!) {
  profileFollow(id: $profileId, direction: $followDirection) {
    ...ProfileFragment
  }
}

mutation LogOut {
  logOut
}

mutation InitiatiteDeleteAccount {
  generateDeleteAccountCode
}

mutation DeleteAccount($code: String!) {
  deleteAccount(code: $code)
}
