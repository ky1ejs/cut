scalar Date
scalar URL

type Query {
  movies(collection: Collection!): [Movie!]!
  search(term: String!): [Movie!]!
  watchList: [Movie!]!
  content(id: String!): ContentResponse!

  contactMatches: [Profile!]!

  account: AccountUnion!
  isUsernameAvailable(username: String!): Boolean!
  initiateEmailVerification(email: String!): Boolean!
  sendTestPush: Boolean!

  profileByUsername(username: String!): ProfileUnion
  profileById(id: String!): ProfileUnion

  # activityFeed: [Activity!]!
  # notifications: [Notification!]!
}

union ProfileUnion = Profile | CompleteAccount
union ContentUnion = ExtendedMovie | ExtendedTVShow

type ContentResponse {
  type: ContentType!
  result: ContentUnion!
}

type Mutation {
  signUp(deviceName: String!): Device!
  logIn(username: String!, password: String!): Device!
  completeAccount(params: CompleteAccountInput!): CompleteAccountResult!
  updateAccount(params: UpdateAccountInput!): CompleteAccount!
  setPushToken(token: PushTokenInput!): Boolean!

  follow(userId: String!): Profile!
  unfollow(userId: String!): Profile!
  uploadContactNumbers(contacts: [ContactInput!]!): Boolean!
  uploadContactEmails(contacts: [ContactInput!]!): Boolean!

  addToWatchList(movieId: String!): WatchListMutationResult!
  removeFromWatchList(movieId: String!): WatchListMutationResult!
}

union AccountUnion = IncompleteAccount | CompleteAccount

input CompleteAccountInput {
  username: String!
  name: String!
  password: String!
  emailToken: String!
}

input ContactInput {
  name: String!
  contactField: String!
  externalId: String!
}

input UpdateAccountInput {
  username: String
  password: String
  phoneNumber: String
  name: String
  bio: String
  url: URL
  favoriteMovies: [String!]
}

enum TokenEnv {
  STAGING
  PRODUCTION
}

enum PushPlatform {
  IOS
  ANDROID
  WEB
}

input PushTokenInput {
  token: String!
  platform: PushPlatform!
  env: TokenEnv!
}

interface ProfileInterface {
  id: String!
  username: String!
  name: String!
  bio_url: URL
  share_url: URL!
  bio: String
  imageUrl: URL
  favoriteMovies: [Movie!]!
  watchList: [Movie!]!
  followerCount: Int!
  followingCount: Int!
}

type Profile implements ProfileInterface {
  # ProfileInterface
  id: String!
  username: String!
  name: String!
  bio_url: URL
  share_url: URL!
  bio: String
  imageUrl: URL
  favoriteMovies: [Movie!]!
  watchList: [Movie!]!
  followerCount: Int!
  followingCount: Int!

  isFollowing: Boolean!
}

type IncompleteAccount {
  id: String!
  watchList: [Movie!]!
}

type CompleteAccount implements ProfileInterface {
  # Profile
  id: String!
  username: String!
  name: String!
  bio_url: URL
  share_url: URL!
  bio: String
  imageUrl: URL
  favoriteMovies: [Movie!]!
  watchList: [Movie!]!
  followerCount: Int!
  followingCount: Int!

  phoneNumber: String
}

type CompleteAccountResult {
  completeAccount: CompleteAccount!
  updatedDevice: Device!
}

type WatchListMutationResult {
  success: Boolean!
  id: String!
}

enum Collection {
  POPULAR
  TOP_RATED
  UPCOMING
  NOW_PLAYING
  TRENDING_DAILY
  TRENDING_WEEKLY
}

type Device {
  name: String!
  session_id: String!
}

enum ContentType { 
  TV_SHOW
  MOVIE
}

interface MovieInterface {
  id: String!
  title: String!
  poster_url: URL!
  releaseDate: Date
  mainGenre: Genre
  genres: [Genre!]!
  isOnWatchList: Boolean!
  allIds: [String!]!
  url: URL!
  type: ContentType!
}

type Movie implements MovieInterface {
  id: String!
  title: String!
  poster_url: URL!
  releaseDate: Date
  mainGenre: Genre
  genres: [Genre!]!
  isOnWatchList: Boolean!
  allIds: [String!]!
  url: URL!
  type: ContentType!
}

interface ExtendedContent {
  overview: String!
  cast: [Actor!]!
  crew: [Person!]!
  watchProviders: [WatchProvider!]!
  userRating: Float!
  trailerUrl: URL
}

type ExtendedMovie implements MovieInterface & ExtendedContent {
  # MovieInterface fields
  id: String!
  title: String!
  poster_url: URL!
  releaseDate: Date
  mainGenre: Genre
  genres: [Genre!]!
  isOnWatchList: Boolean!
  allIds: [String!]!
  url: URL!
  type: ContentType!

  # ExtendedContent fields
  overview: String!
  cast: [Actor!]!
  crew: [Person!]!
  watchProviders: [WatchProvider!]!
  userRating: Float!
  trailerUrl: URL

  # ExtendedMovie fields
  backdrop_url: URL!
  runtime: Int!
  productionCountries: [ProductionCountry!]!
  director: Person!
}

type ProductionCountry {
  iso_3166_1: String!
  name: String!
  emoji: String!
}

type WatchProvider {
  provider_id: Int!
  provider_name: String!
  logo_url: URL!
  link: URL!
  accessModels: [AccessModel!]!
}

enum AccessModel {
  BUY
  RENT
  STREAM
}

enum PersonRole {
  DIRECTOR
  WRITER
  EXECUTIVE_PRODUCER
  PRODUCER
}

interface PersonInterface {
  id: String!
  name: String!
  profile_url: URL
}

type Person implements PersonInterface {
  id: String!
  name: String!
  profile_url: URL

  role: PersonRole!
}

type Actor implements PersonInterface {
  id: String!
  name: String!
  profile_url: URL

  character: String!
}

type Genre {
  id: Int!
  name: String!
}

type GenreMetadata {
  name: String!
}

type ExtendedTVShow implements MovieInterface & ExtendedContent {
  # MovieInterface fields
  id: String!
  title: String!
  poster_url: URL!
  releaseDate: Date
  mainGenre: Genre
  genres: [Genre!]!
  isOnWatchList: Boolean!
  allIds: [String!]!
  url: URL!
  type: ContentType!

  # ExtendedContent fields
  overview: String!
  cast: [Actor!]!
  crew: [Person!]!
  watchProviders: [WatchProvider!]!
  userRating: Float!
  trailerUrl: URL

  # ExtendedTVShow fields
  seasons: [Season!]!
  seasonCount: Int!
  episodeCount: Int!
}

type Season {
  id: String!
  name: String!
  overview: String!
  season_number: Int!
  episode_count: Int!
  air_date: Date
  poster_url: URL!
}